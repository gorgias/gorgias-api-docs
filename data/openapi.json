{"definitions": {"Account": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "domain": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "meta": {"$ref": "#/definitions/AccountMeta"}, "roles": {"items": {"type": "string"}, "type": "array"}, "stripe_id": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user_id": {"format": "int32", "type": "integer"}}, "required": ["domain"], "type": "object"}, "AccountMeta": {"properties": {"algolia_api_key": {"type": "string"}}, "type": "object"}, "Action": {"properties": {"arguments": {"description": "Functional arguments", "type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "description": {"description": "A longer text explaining what the action is supposed to do.", "nullable": true, "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "macro": {"items": {"type": "string"}, "type": "array"}, "name": {"description": "System name of the action", "type": "string"}, "title": {"description": "User defined title of the action", "type": "string"}, "type": {"description": "Shows if an action is user or system defined", "type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["title", "name", "arguments"], "type": "object"}, "ActivitySchema": {"properties": {"events": {"items": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "object": {"$ref": "#/definitions/Ticket"}, "object_id": {"format": "int32", "type": "integer"}, "object_type": {"type": "string"}, "type": {"description": "Event types are used to discriminate between events.", "meta": {"enum": ["ticket-created", "ticket-updated"], "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user_id": {"format": "int32", "type": "integer"}}, "required": ["type"], "type": "object"}, "type": "array"}, "views": {"items": {"$ref": "#/definitions/ViewColumn"}, "type": "array"}}, "type": "object"}, "Attachment": {"properties": {"content_type": {"type": "string"}, "name": {"type": "string"}, "size": {"format": "int32", "type": "integer"}, "url": {"format": "url", "type": "string"}}, "required": ["url", "name", "size", "content_type"], "type": "object"}, "CustomerRating": {"properties": {"comment": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "rating": {"format": "int32", "type": "integer"}, "rating_datetime": {"format": "date-time", "type": "string"}, "sent_datetime": {"format": "date-time", "type": "string"}, "source": {"type": "string"}, "ticket_id": {"format": "int32", "type": "integer"}, "uri": {"description": "URI of the object", "type": "string"}}, "type": "object"}, "Event": {"properties": {"context": {"type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "data": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "object_id": {"format": "int32", "type": "integer"}, "object_type": {"type": "string"}, "type": {"description": "Event types are used to discriminate between events.", "meta": {"enum": ["ticket-created", "ticket-updated"], "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user_id": {"format": "int32", "type": "integer"}, "version": {"type": "string"}}, "required": ["type"], "type": "object"}, "Group": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "description": {"type": "string"}, "external_id": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "users": {"items": {"type": "string"}, "type": "array"}}, "required": ["name"], "type": "object"}, "Integration": {"properties": {"connections": {"items": {"$ref": "#/definitions/UserConnection"}, "type": "array"}, "created_datetime": {"format": "date-time", "type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "decoration": {"type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "description": {"nullable": true, "type": "string"}, "facebook": {"properties": {"about": {"type": "string"}, "callback_url": {"type": "string"}, "category": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "page_id": {"type": "string"}, "picture": {"type": "string"}, "settings": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}}, "type": "object"}, "http": {"$ref": "#/definitions/IntegrationHTTP"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "locked_datetime": {"format": "date-time", "type": "string"}, "mappings": {"items": {"$ref": "#/definitions/IntegrationMapping"}, "type": "array"}, "meta": {"type": "string"}, "name": {"type": "string"}, "smooch": {"$ref": "#/definitions/IntegrationSmooch"}, "type": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["type", "name"], "type": "object"}, "IntegrationHTTP": {"properties": {"form": {"nullable": true, "type": "string"}, "headers": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "integration": {"$ref": "#/definitions/Integration"}, "method": {"type": "string"}, "request_content_type": {"default": "application/json", "type": "string"}, "response_content_type": {"default": "application/json", "type": "string"}, "triggers": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "url": {"type": "string"}}, "required": ["url"], "type": "object"}, "IntegrationMapping": {"properties": {"destination_key": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "integration": {"type": "string"}, "order": {"format": "int32", "type": "integer"}, "source_key": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}}, "type": "object"}, "IntegrationSmooch": {"properties": {"callback_url": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "integration": {"$ref": "#/definitions/Integration"}, "settings": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "webhook_id": {"type": "string"}, "webhook_secret": {"type": "string"}}, "required": ["webhook_id", "webhook_secret"], "type": "object"}, "Macro": {"properties": {"actions": {"items": {"$ref": "#/definitions/Action"}, "type": "array"}, "category": {"type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "external_id": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "ticket_messages": {"items": {"type": "string"}, "type": "array"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["name"], "type": "object"}, "Organization": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "description": {"type": "string"}, "external_id": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "url": {"type": "string"}, "users": {"items": {"type": "string"}, "type": "array"}}, "required": ["name"], "type": "object"}, "Role": {"properties": {"account": {"type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "description": {"type": "string"}, "external_id": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "users": {"items": {"type": "string"}, "type": "array"}}, "required": ["name"], "type": "object"}, "Rule": {"properties": {"code": {"type": "string"}, "code_ast": {"type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "crontab": {"type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "description": {"type": "string"}, "event_types": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "priority": {"format": "int32", "type": "integer"}, "title": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user_id": {"format": "int32", "type": "integer"}}, "required": ["title"], "type": "object"}, "Tag": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"meta": {"operators": {"contains": {"label": "contains"}, "eq": {"label": "is"}, "neq": {"label": "is not"}, "notContains": {"label": "does not contain"}}, "rules": {"widget": "input"}}, "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}}, "required": ["name"], "type": "object"}, "Ticket": {"properties": {"assignee_group": {"$ref": "#/definitions/Group"}, "assignee_user": {"$ref": "#/definitions/User", "meta": {"only": ["id", "email", "name", "firstname", "lastname"]}}, "channel": {"meta": {"enum": ["email", "phone", "sms", "chat", "twitter", "facebook", "api"], "filters": {"widget": "multi-select"}, "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}, "closed_datetime": {"format": "date-time", "meta": {"operators": {"gt": {"label": "is greater than"}, "gte": {"label": "is greater or equal to"}, "lt": {"label": "is less than"}, "lte": {"label": "is less or equal to"}}, "rules": {"widget": "input"}}, "type": "string"}, "created_datetime": {"format": "date-time", "meta": {"operators": {"gt": {"label": "is greater than"}, "gte": {"label": "is greater or equal to"}, "lt": {"label": "is less than"}, "lte": {"label": "is less or equal to"}}, "rules": {"widget": "input"}}, "type": "string"}, "customer_ratings": {"items": {"$ref": "#/definitions/CustomerRating"}, "type": "array"}, "deleted_datetime": {"format": "date-time", "meta": {"operators": {"gt": {"label": "is greater than"}, "gte": {"label": "is greater or equal to"}, "lt": {"label": "is less than"}, "lte": {"label": "is less or equal to"}}, "rules": {"widget": "input"}}, "type": "string"}, "external_id": {"type": "string"}, "from_agent": {"meta": {"enum": ["true", "false"], "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}, "show": ["rules"], "widget": "select"}, "type": "boolean"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "messages": {"items": {"$ref": "#/definitions/TicketMessage"}, "type": "array"}, "meta": {"type": "string"}, "opened_datetime": {"format": "date-time", "meta": {"operators": {"gt": {"label": "is greater than"}, "gte": {"label": "is greater or equal to"}, "lt": {"label": "is less than"}, "lte": {"label": "is less or equal to"}}, "rules": {"widget": "input"}}, "type": "string"}, "priority": {"default": "normal", "description": "Ticket priority shows how important is the ticket", "meta": {"enum": ["low", "normal", "high", "critical"], "filters": {"widget": "select"}, "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}, "receiver": {"$ref": "#/definitions/User", "meta": {"only": ["id", "email", "name", "firstname", "lastname"]}}, "requester": {"$ref": "#/definitions/User", "meta": {"only": ["id", "email", "name", "firstname", "lastname", "channels", "customer"]}}, "sender": {"$ref": "#/definitions/User", "meta": {"only": ["id", "email", "name", "firstname", "lastname"]}}, "status": {"default": "new", "description": "Ticket status is used for managing the lifecycle of the ticket", "meta": {"enum": ["new", "open", "closed"], "filters": {"widget": "multi-select"}, "operators": {"contains": {"label": "contains"}, "eq": {"label": "is"}, "neq": {"label": "is not"}, "notContains": {"label": "does not contain"}}, "rules": {"widget": "select"}}, "type": "string"}, "subject": {"meta": {"operators": {"contains": {"label": "contains"}, "endsWith": {"label": "ends with"}, "eq": {"label": "is"}, "neq": {"label": "is not"}, "notContains": {"label": "does not contain"}, "startsWith": {"label": "starts with"}}, "rules": {"widget": "input"}}, "type": "string"}, "tags": {"items": {"$ref": "#/definitions/Tag"}, "meta": {"only": ["id", "name", "uri"], "operators": {"contains": {"label": "contains"}, "eq": {"label": "is"}, "neq": {"label": "is not"}, "notContains": {"label": "does not contain"}}, "rules": {"widget": "select"}}, "type": "array"}, "updated_datetime": {"format": "date-time", "meta": {"operators": {"gt": {"label": "is greater than"}, "gte": {"label": "is greater or equal to"}, "lt": {"label": "is less than"}, "lte": {"label": "is less or equal to"}}, "rules": {"widget": "input"}}, "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "via": {"meta": {"enum": ["email", "phone", "sms", "chat", "twitter", "facebook", "api", "form", "helpdesk", "app", "rule"], "filters": {"widget": "multi-select"}, "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}}, "required": ["channel", "sender", "requester", "via", "receiver", "messages"], "type": "object"}, "TicketMessage": {"properties": {"actions": {"many": true, "type": "string"}, "attachments": {"items": {"$ref": "#/definitions/Attachment"}, "meta": {"doc": {"expand": true}}, "type": "array"}, "body_html": {"type": "string"}, "body_text": {"meta": {"operators": {"contains": {"label": "contains"}, "endsWith": {"label": "ends with"}, "eq": {"label": "is"}, "neq": {"label": "is not"}, "notContains": {"label": "does not contain"}, "startsWith": {"label": "starts with"}}}, "type": "string"}, "channel": {"meta": {"enum": ["email", "phone", "sms", "chat", "twitter", "facebook", "api"], "filters": {"widget": "multi-select"}, "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "external_id": {"type": "string"}, "from_agent": {"type": "boolean"}, "headers": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "macros": {"items": {"$ref": "#/definitions/Macro"}, "type": "array"}, "meta": {"type": "string"}, "opened_datetime": {"format": "date-time", "type": "string"}, "public": {"default": true, "type": "boolean"}, "receiver": {"$ref": "#/definitions/User", "meta": {"only": ["id", "email", "name", "firstname", "lastname"]}}, "sender": {"$ref": "#/definitions/User", "meta": {"only": ["id", "email", "name", "firstname", "lastname"]}}, "sent_datetime": {"format": "date-time", "type": "string"}, "source": {"type": "string"}, "stripped_html": {"type": "string"}, "stripped_signature": {"type": "string"}, "stripped_text": {"type": "string"}, "subject": {"type": "string"}, "ticket_id": {"format": "int32", "type": "integer"}, "uri": {"description": "URI of the object", "type": "string"}, "via": {"meta": {"enum": ["email", "phone", "sms", "chat", "twitter", "facebook", "api", "form", "helpdesk", "app", "rule"], "filters": {"widget": "multi-select"}, "operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}, "rules": {"widget": "select"}}, "type": "string"}}, "required": ["channel", "sender", "via", "receiver"], "type": "object"}, "User": {"properties": {"activated_datetime": {"format": "date-time", "type": "string"}, "active": {"type": "boolean"}, "auths": {"items": {"$ref": "#/definitions/UserAuth"}, "type": "array"}, "channels": {"items": {"$ref": "#/definitions/UserChannel"}, "type": "array"}, "connections": {"items": {"type": "string"}, "type": "array"}, "country": {"type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "customer": {"type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "email": {"format": "email", "type": "string"}, "events": {"items": {"type": "string"}, "type": "array"}, "external_id": {"type": "string"}, "firstname": {"type": "string"}, "groups": {"items": {"$ref": "#/definitions/Group"}, "type": "array"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"contains": {"label": "contains"}, "eq": {"label": "is"}, "neq": {"label": "is not"}, "notContains": {"label": "does not contain"}}}, "type": "integer"}, "language": {"type": "string"}, "lastname": {"type": "string"}, "meta": {"type": "string"}, "name": {"type": "string"}, "organizations": {"items": {"$ref": "#/definitions/Organization"}, "type": "array"}, "password": {"type": "string"}, "roles": {"items": {"$ref": "#/definitions/Role"}, "type": "array"}, "signature_html": {"type": "string"}, "signature_text": {"type": "string"}, "timezone": {"default": "UTC", "type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}}, "required": ["roles"], "type": "object"}, "UserAuth": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "data": {"type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"type": "string"}, "user_id": {"format": "int32", "type": "integer"}}, "type": "object"}, "UserChannel": {"properties": {"address": {"type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "preferred": {"type": "boolean"}, "type": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["type", "address"], "type": "object"}, "UserConnection": {"properties": {"created_datetime": {"format": "date-time", "type": "string"}, "data": {"type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "type": {"type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"type": "string"}, "user_id": {"format": "int32", "type": "integer"}}, "type": "object"}, "View": {"properties": {"count": {"format": "int32", "type": "integer"}, "created_datetime": {"format": "date-time", "type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "decoration": {"type": "string"}, "display_order": {"format": "int32", "type": "integer"}, "fields": {"items": {"properties": {"display_order": {"default": 99, "format": "int32", "type": "integer"}, "filter": {"type": "string"}, "name": {"type": "string"}, "title": {"type": "string"}, "type": {"default": "plain", "type": "string"}, "visible": {"type": "boolean"}, "width": {"default": 1, "format": "int32", "type": "integer"}}, "required": ["type", "name", "title"], "type": "object"}, "type": "array"}, "filters": {"type": "string"}, "filters_ast": {"type": "string"}, "group_by": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "order_by": {"default": "updated_datetime", "type": "string"}, "order_dir": {"default": "desc", "type": "string"}, "search": {"type": "string"}, "slug": {"type": "string"}, "type": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["user", "slug"], "type": "object"}, "ViewColumn": {"properties": {"count": {"format": "int32", "type": "integer"}, "created_datetime": {"format": "date-time", "type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "decoration": {"type": "string"}, "display_order": {"format": "int32", "type": "integer"}, "fields": {"items": {"properties": {"display_order": {"default": 99, "format": "int32", "type": "integer"}, "filter": {"type": "string"}, "name": {"type": "string"}, "title": {"type": "string"}, "type": {"default": "plain", "type": "string"}, "visible": {"type": "boolean"}, "width": {"default": 1, "format": "int32", "type": "integer"}}, "required": ["type", "name", "title"], "type": "object"}, "type": "array"}, "filters": {"type": "string"}, "filters_ast": {"type": "string"}, "group_by": {"type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "name": {"type": "string"}, "order_by": {"default": "updated_datetime", "type": "string"}, "order_dir": {"default": "desc", "type": "string"}, "search": {"type": "string"}, "slug": {"type": "string"}, "type": {"type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["user", "slug"], "type": "object"}, "Widget": {"description": "A widget is a container that is displayed in the sidebar and contains a list of fields", "properties": {"context": {"default": "ticket", "description": "In what context to display this widget", "type": "string"}, "created_datetime": {"format": "date-time", "type": "string"}, "deactivated_datetime": {"format": "date-time", "type": "string"}, "deleted_datetime": {"format": "date-time", "type": "string"}, "id": {"description": "Primary key of the object", "format": "int32", "meta": {"operators": {"eq": {"label": "is"}, "neq": {"label": "is not"}}}, "type": "integer"}, "order": {"description": "Order in which widgets are displayed. Lowest first.", "format": "int32", "type": "integer"}, "template": {"type": "string"}, "type": {"description": "Type of the widget is used for rendering", "enum": ["custom", "stripe"], "type": "string"}, "updated_datetime": {"format": "date-time", "type": "string"}, "uri": {"description": "URI of the object", "type": "string"}, "user": {"$ref": "#/definitions/User"}}, "required": ["type", "template"], "type": "object"}}, "description": "The new generation helpdesk", "info": {"title": "Gorgias", "version": "0.0.1"}, "parameters": {"id": {"description": "ID of the target object", "format": "int64", "in": "path", "name": "id", "required": true, "type": "Integer"}}, "paths": {"/api/actions/": {"get": {"description": "Get all action of the account of the user, paginated.", "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Action"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get all actions", "tags": ["Action"]}, "post": {"consumes": ["application/json"], "description": "Create a new action", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/Action"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create an action", "tags": ["Action"]}}, "/api/actions/{id}/": {"delete": {"description": "Delete an action", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"204": {"description": "No content."}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Delete an action", "tags": ["Action"]}, "get": {"description": "Get an action based on {id}", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Action"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get a single action", "tags": ["Action"]}, "put": {"consumes": ["application/json"], "description": "Update an action", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/Action"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update an action", "tags": ["Action"]}}, "/api/activity/": {"post": {"consumes": ["application/json"], "description": "Takes a list of `EventSchema` and dumps a `ActivitySchema`", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/ActivityDump"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create activities", "tags": ["Activity"]}}, "/api/activity/{id}/": {}, "/api/events/": {"get": {"description": "Get all events of the account of the user, paginated.", "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Event"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get all events", "tags": ["Event"]}}, "/api/events/{id}/": {}, "/api/integrations/": {"get": {"description": "Get the list of all integrations (active or not) of the current account", "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/User"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get all integration", "tags": ["Integration"]}, "post": {"consumes": ["application/json"], "description": "Create a new integration with a new or existing connection to an external service.", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/Integration"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create an integration", "tags": ["Integration"]}}, "/api/integrations/{id}/": {"delete": {"description": "Delete an existing integration with the linked connection along", "produces": ["application/json"], "responses": {"204": {"description": "No content."}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Delete an integration", "tags": ["Integration"]}, "get": {"description": "Fetch an integration's data with the linked connection.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Integration"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get an integration", "tags": ["Integration"]}, "put": {"consumes": ["application/json"], "description": "Update an existing integration or its connection", "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/Integration"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update an integration", "tags": ["Integration"]}}, "/api/rules/": {"get": {"description": "Fetch all the rules of the current account", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Rule"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Fetch all rules", "tags": ["Rule"]}, "post": {"consumes": ["application/json"], "description": "Create a new Rule", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create a Rule", "tags": ["Rule"]}}, "/api/rules/{id}/": {"get": {"description": "Fetch a single Rule", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Fetch a single Rule", "tags": ["Rule"]}, "put": {"consumes": ["application/json"], "description": "Edit an existing Rule", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Edit a Rule", "tags": ["Rule"]}}, "/api/settings/": {"get": {"description": "Retrieve the settings of the current user's account.", "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/AccountMeta"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve the current account's settings", "tags": ["Settings"]}, "put": {"consumes": ["application/json"], "description": "Update the settings of the account of the current user, if he has the rights to do so (e.g. if he is an agent or an admin of this account).\n", "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/AccountMeta"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update the current account settings", "tags": ["Settings"]}}, "/api/stats/": {}, "/api/stats/{id}/": {"get": {"description": "Get scalar statistics about tickets.", "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Stats"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get scalar statistics about tickets.", "tags": ["Statistics"]}}, "/api/tickets/": {"get": {"description": "Retrieve a list of tickets. If the {view} argument is present in the URL, then the list will correspond to this view's constraints.\n", "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Ticket"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve a list of tickets", "tags": ["Ticket"]}, "post": {"consumes": ["application/json"], "description": "Create a new Ticket along with its Messages.", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/Ticket"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create a new Ticket", "tags": ["Ticket"]}}, "/api/tickets/<int:ticket_id>/messages/": {"get": {"description": "Retrieve the list of Messages of a Ticket identified by the URL parameter {ticketId}", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/TicketMessage"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve the list of Messages of a Ticket", "tags": ["Ticket"]}, "post": {"consumes": ["application/json"], "description": "Create a new TicketMessage and returns it.", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/TicketMessage"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create a new TicketMessage", "tags": ["Ticket"]}}, "/api/tickets/<int:ticket_id>/messages/{id}/": {"delete": {"description": "Delete a Message of a specific Ticket", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"204": {"description": "No content."}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Delete a Message", "tags": ["Ticket"]}, "get": {"description": "Retrieve a single TicketMessage identified by the URL parameters {ticketId} and {id}.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/TicketMessage"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve a single TicketMessage", "tags": ["Ticket"]}, "put": {"consumes": ["application/json"], "description": "Update a TicketMessage and return it.", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/TicketMessage"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update a TicketMessage", "tags": ["Ticket"]}}, "/api/tickets/{id}/": {"get": {"description": "Retrieve a single Ticket, identified by the URL parameter {id}.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Ticket"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve a single Ticket", "tags": ["Ticket"]}, "put": {"consumes": ["application/json"], "description": "Update a Ticket identified by the URL parameter {id} and return it.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/Ticket"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update a Ticket", "tags": ["Ticket"]}}, "/api/upload/": {}, "/api/upload/{id}/": {}, "/api/users/": {"get": {"description": "Retrieve all users of the account of the current user, paginated.", "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/User"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve list of users", "tags": ["User"]}, "post": {"consumes": ["application/json"], "description": "Create a new user linked to the current user's account. It's role can be any combination of \"user\", \"agent\" and \"admin\".\n", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/User"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create a user", "tags": ["User"]}}, "/api/users/<int:user_id>/events/": {"get": {"description": "Get all events of the specified user, sorted by DESC created_datetime.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Event"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get all user's events", "tags": ["User"]}}, "/api/users/<int:user_id>/events/{id}/": {}, "/api/users/<int:user_id>/tickets/": {"get": {"description": "Get all tickets of the specified user, sorted by DESC created_datetime.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Ticket"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get all user's tickets", "tags": ["User"]}}, "/api/users/<int:user_id>/tickets/{id}/": {}, "/api/users/roles/": {"get": {"description": "Retrieve all roles of the account of the current user, paginated.", "produces": ["application/json"], "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Role"}, "type": "array"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve list of roles", "tags": ["User"]}, "post": {"consumes": ["application/json"], "description": "Create a new role linked to the current user's account.\n", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/Role"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create a role", "tags": ["User"]}}, "/api/users/roles/{id}/": {"get": {"description": "Retrieve a single role, identified by the URL parameter {id}.\n", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Role"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve a single role", "tags": ["User"]}}, "/api/users/{id}/": {"delete": {"description": "Delete a user identified by the URL parameter {id}.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"204": {"description": "No content."}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Delete a user", "tags": ["User"]}, "get": {"description": "Retrieve a single user, identified by the URL parameter {id}. If {id} = 0, the current user is returned.\n", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/User"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Retrieve a single user", "tags": ["User"]}, "put": {"consumes": ["application/json"], "description": "Update a user's fields, and return it's new version.", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/User"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update a user", "tags": ["User"]}}, "/api/widgets/": {"post": {"consumes": ["application/json"], "description": "Create a new widget that will be displayed in the sidebar.", "produces": ["application/json"], "responses": {"201": {"schema": {"$ref": "#/definitions/Widget"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Create a widget", "tags": ["Widget"]}}, "/api/widgets/{id}/": {"delete": {"description": "Delete a widget", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"204": {"description": "No content."}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Delete a widget", "tags": ["Widget"]}, "get": {"description": "Get a widget based on {id}", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"200": {"schema": {"$ref": "#/definitions/Widget"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Get a single widget", "tags": ["Widget"]}, "put": {"consumes": ["application/json"], "description": "Update a widget", "parameters": [{"$ref": "#/parameters/id"}], "produces": ["application/json"], "responses": {"202": {"schema": {"$ref": "#/definitions/Widget"}}, "400": {"description": "Bad request."}, "404": {"description": "Not found."}}, "summary": "Update a widget", "tags": ["Widget"]}}}, "swagger": "2.0", "tags": [{"description": "Latest activity when user is walking arround", "name": "Activity"}, {"description": "Contains every resources concerning the current account's settings.", "name": "Settings"}, {"description": "Contains all the endpoints about how to manage Tickets and their Messages.", "name": "Ticket"}, {"description": "Contains all the endpoints about how to manage users and their roles / groups / organisations.", "name": "User"}, {"description": "Receive a list of files and upload them in Google Storage", "name": "Upload"}, {"description": "Allows users to create or enable integrations for their account", "name": "Integration"}, {"description": "Endpoints to manipulate Rules.", "name": "Rule"}, {"description": "Contains every resources concerning the statistics.", "name": "Statistics"}]}